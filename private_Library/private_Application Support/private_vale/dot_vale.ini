# StylesPath = ci/vale/styles

# The minimum alert level to display (suggestion, warning, or error).
#
# CI builds will only fail on error-level alerts.
MinAlertLevel = error

# HTML tags to be ignored by Vale. `code` and `tt` are the default, but Linode
# seems to use `strong` in a similar ways -- e.g., `**docker build -t ubuntu**`,
# which could trigger two style issues ("docker" and "ubuntu") but is actually
# a command.
IgnoredScopes = code, tt, strong, img, url, a, body.id
SkippedScopes = script, style, pre, figure, code, tt, blockquote, listingblock, literalblock

# Specifies what Vale considers to be a boundary between words.
; WordTemplate = \s(?:%s)\s
; WordTemplate = \b(?:%s)\b

Vocab = o11y
Packages = Hugo

[formats]

bash = md
shell = md
python = md

[*.md]
# A Linode-specific style (see ci/vale/styles/Linode) that implements spelling
# and capitalization rules.
#
# To add another style, just add it to the `StylesPath` and update the setting
# below (e.g., `BasedOnStyles = Linode, AnotherStyle`).
BasedOnStyles = Vale, Linode, LinodeOBS
Vale.Spelling = NO
Vale.Repetition = NO

## HUGO SUPPORT ##
# Exclude `{{< ... >}}`, `{{% ... %}}`, [Who]({{< ... >}})
# Ignore code surrounded by backticks or plus sign, parameters defaults, URLs.
TokenIgnores = (\x60[^\n\x60]+\x60), ([^\n]+=[^\n]*), (\+[^\n]+\+), (http[^\n]+\[)
TokenIgnores = ({{[%<] .* [%>]}}.*?{{[%<] ?/.* [%>]}}), \
(\[.+\]\({{[%<] .+ [%>]}}\)), \
[^\S\r\n]({{[%<] \w+ .+ [%>]}})\s, \
[^\S\r\n]({{[%<](?:/\*) .* (?:\*/)[%>]}})\s, \
(\x60[^\n\x60]+\x60), ([^\n]+=[^\n]*), (\+[^\n]+\+), (http[^\n]+\[), \
\#\w+\s

# Exclude `{{<  myshortcode `This is some <b>HTML</b>, ... >}}`
BlockIgnores = (?sm)^({{[%<] \w+ [^{]*?\s[%>]}})\n$, \
(?s) *({{< highlight [^>]* ?>}}.*?{{< ?/ ?highlight >}})

